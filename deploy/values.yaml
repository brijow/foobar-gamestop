# Default values for foobar-gamestop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  app:
    repository: ghcr.io/salcaino/foobar-dash-app
    tag: "latest"
  wsb:
    repository: ghcr.io/salcaino/foobar-wsb
    tag: "latest"
  connect:
    repository: ghcr.io/salcaino/foobar-connect
    tag: "latest"
  jobs:
    repository: ghcr.io/salcaino/foobar-jobs
    tag: "latest"

# imageCredentials:
#   name: git-credentials
#   registry: ghcr.io
#   username: salcaino
#   password: pass

containerPort: 8888
imagePullSecrets: []
nameOverride: "foobar-gamestop"
fullnameOverride: "foobar-gamestop"


#helm install aws-load-balancer-controller eks/aws-load-balancer-controller --set clusterName=my-cluster -n kube-system
aws-load-balancer-controller:
  image:
    tag: v2.0.0
  clusterName: foobar
  serviceAccount:
    create: false
    name: aws-load-balancer-controller


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "service"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
deployment:
  name: shortsqueeze-app
  keyspace: kafkapipeline
  weathertable: weatherreport
  twittertable: twitterdata

producers:
  finnhub:
    containername: finnhubproducer
    topicname: finnhubsource
    sleeptime: 300
    encoded_token: YzFsamIyMjM3Zmt0Mm1zazZ1ZWc=
    # YnZ1a29pdjQ4djZwa3E4M3VhczA=
  wsb:
    containername: wsbproducer
    posttopicname: redditpost
    tagtopicname: reddittag
    encoded_clientid1: RHpQRUhmUXJkRlJ0b1E=
    encoded_clientsecret1: NWItUE4zYnhacGxlR0UzczNzeDI5TV9mbkVDQTlR
    encoded_clientid2: VWZhUDhmLXJYWEx1RHc=
    encoded_clientsecret2: Q2YtakdWTmUyRnNVSHlyQ2RpWFd3ejlrcDdud3V3
  jobs:
    bucket_region: us-west-2
    crons:
      "0":
        name: finnhub
        command: "/usr/app/finnancial_data_producer.py"
        schedule: "*/4 * * * *" #every 4 minutes for now
        topicname: finnhubsource
        gmetable: gamestop
        tagtable: tag
        poststable: post
        widetable: wide
        image:
          repository: ghcr.io/salcaino/foobar-finnhub-prod
          tag: "latest"
      "1":
        name: m2-predictor
        command: "/usr/app/m2_predict_producer.py"
        schedule: "*/5 * * * *" #every 5 minutes for now
        topicname: widetopic
        gmetable: gamestop
        tagtable: tag
        poststable: post
        widetable: wide
        image:
          repository: ghcr.io/salcaino/foobar-cron
          tag: "latest"
    wideproducer:
      topicname: widetopic
    preloaders:
      "0":
        name: tagspreloader
        weight: -1
        batchsize: 250
        hook: post-install
        tablename: tag
        command: /usr/app/preload_tags.py
      "1":
        name: finnhubpreloader
        weight: -2
        batchsize: 100
        hook: post-install
        tablename: gamestop
        command: /usr/app/preload_finnhub.py
      "2":
        name: postspreloader
        weight: -2
        batchsize: 200
        hook: post-install
        tablename: post
        command: /usr/app/preload_posts.py
      "3":
        name: widetablepreloader
        weight: -3
        batchsize: 100
        hook: post-install
        tablename: wide
        command: /usr/app/preload_widetable.py

consumers:
  name: consumers
  twitter:
    sinktopic: twittersink

service:
  type: NodePort
  port: 80
  name: shortsqueeze-service

ingress:
  enabled: true
  name: short-squeeze-ingress
  annotations:
    kubernetes.io/ingress.class: alb


autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80


kafka:
  autoCreateTopicsEnable: true
  service:
    port: 9092
  global:
    storageClass: gp2
  persistence:
    storageClass: gp2
    size: 1Gi
  zookeeper:
    service:
      port: 2181
    persistence:
      storageClass: gp2
      size: 1Gi
  connect:
    name: connect
    port: 8083
cassandra:
  replicaCount: 3
  image:  
    debug: true
  dbUser:
    user: admin
    existingSecret: cassandra-secret
  persistence:
    storageClass: gp2
    size : 6Gi
  initDBConfigMap: init-db
  extraEnvVarsCM: db-conf
metrics-server:
  serviceAccount:
    create: false
    name: aws-load-balancer-controller
kubernetes-dashboard:
  service:
    type: NodePort
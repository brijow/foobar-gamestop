# Default values for foobar-gamestop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  finnhub:
    repository: ghcr.io/salcaino/foobar-finnhub-prod
    tag: "latest"
  app:
    repository: ghcr.io/salcaino/foobar-vis
    tag: "latest"
  weather:
    repository: ghcr.io/salcaino/foobar-weather
    tag: "latest"
  twitter:
    repository: ghcr.io/salcaino/foobar-twitter
    tag: "latest"
  consumers:
    repository: ghcr.io/salcaino/foobar-consumers
    tag: "latest"
  connect:
    repository: ghcr.io/salcaino/foobar-connect
    tag: "latest"

# imageCredentials:
#   name: git-credentials
#   registry: ghcr.io
#   username: salcaino
#   password: pass

containerPort: 8888
imagePullSecrets: []
nameOverride: "foobar-gamestop"
fullnameOverride: "foobar-gamestop"


#helm install aws-load-balancer-controller eks/aws-load-balancer-controller --set clusterName=my-cluster -n kube-system
aws-load-balancer-controller:
  image:
    tag: v2.0.0
  clusterName: foobar
  serviceAccount:
    create: false
    name: aws-load-balancer-controller


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "service"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
deployment:
  name: shortsqueeze-app
  keyspace: kafkapipeline
  weathertable: weatherreport
  twittertable: twitterdata

producers:
  name: producers
  finnhub:
    topicname: finnhub-source
    sleeptime: 300
  weather:
    topicname: weather
    sleeptime: 60
  twitter:
    topicname: twitter

consumers:
  name: consumers
  twitter:
    sinktopic: twittersink

service:
  type: NodePort
  port: 80
  name: shortsqueeze-service

ingress:
  enabled: true
  name: short-squeeze-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    # kubernetes.io/tls-acme: "true"
  # hosts:
  #   - host: ec2-54-160-141-94.compute-1.amazonaws.com
  #     paths: []
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}

kafka:
  autoCreateTopicsEnable: true
  service:
    port: 9092
  global:
    storageClass: gp2
  provisioning:
    enabled : false
    topics : 
      - name: weather
      - name: twitter
      - name: twittersink
  persistence:
    storageClass: gp2
    size: 1Gi
  zookeeper:
    service:
      port: 2181
    persistence:
      storageClass: gp2
      size: 1Gi
  connect:
    name: connect
    port: 8083
cassandra:
  image:  
    debug: true
  dbUser:
    user: admin
    existingSecret: cassandra-secret
  persistence:
    storageClass: gp2
    size : 1Gi
  initDBConfigMap: init-db
